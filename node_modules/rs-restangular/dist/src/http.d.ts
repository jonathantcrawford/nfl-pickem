import { Observable } from 'rxjs/Observable';
import { Headers, RequestOptionsArgs, Response, URLSearchParams } from '@angular/http';
import { RestangularPath } from './path';
import 'rxjs/add/operator/map';
export declare function mergeHeaders(headers: Headers, defaultHeaders: Headers): Headers;
export declare function mergeSearch(params: URLSearchParams, defaultParams: URLSearchParams): URLSearchParams;
export declare namespace RestangularHttp {
    function interceptResponse(path: RestangularPath, operation: string, url: string): (value: any, index: number) => any;
    function makeRequest(operation: string, path: RestangularPath, requestArgs: RequestOptionsArgs, additionalOptions?: RequestOptionsArgs): Observable<Response>;
    function get(path: RestangularPath, options?: RequestOptionsArgs): Observable<Response>;
    function getList(path: RestangularPath, options?: RequestOptionsArgs): Observable<Response>;
    function post(path: RestangularPath, body: any, options?: RequestOptionsArgs): Observable<Response>;
    function put(path: RestangularPath, body: any, options?: RequestOptionsArgs): Observable<Response>;
    function remove(path: RestangularPath, options?: RequestOptionsArgs): Observable<Response>;
    function patch(path: RestangularPath, body: any, options?: RequestOptionsArgs): Observable<Response>;
    function head(path: RestangularPath, options?: RequestOptionsArgs): Observable<Response>;
    function options(path: RestangularPath, options?: RequestOptionsArgs): Observable<Response>;
}
